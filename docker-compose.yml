version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=blog_db
      - DB_USERNAME=blog_user
      - DB_PASSWORD=secret
    depends_on:
      db:
        condition: service_healthy
    networks:
      - laravel_network

  webserver:
    image: nginx:alpine
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - '8000:80'
    volumes:
      - .:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel_network

  db:
    image: postgres:15
    restart: always
    container_name: postgres_db
    environment:
      POSTGRES_DB: blog_db
      POSTGRES_USER: blog_user
      POSTGRES_PASSWORD: secret
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/postgresql.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U blog_user -d blog_db']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - laravel_network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_scheduler
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=blog_db
      - DB_USERNAME=blog_user
      - DB_PASSWORD=secret
    command: >
      sh -c "php artisan schedule:work"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - laravel_network

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5052:80'
    depends_on:
      - db
    networks:
      - laravel_network

volumes:
  db_data:

networks:
  laravel_network:
    driver: bridge
